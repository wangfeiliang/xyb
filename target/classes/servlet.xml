<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="   
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo-1.1.xsd
    http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<context:component-scan
		base-package="org.zlex.spring.controller" />
		
	<mvc:annotation-driven  />
		<!-- 下面两个是配置springmvc的拦截器 -->
	<bean
		id="urlMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
		
		<bean  
        id="jstlViewResolver"  
        class="org.springframework.web.servlet.view.InternalResourceViewResolver"  
        p:viewClass="org.springframework.web.servlet.view.JstlView"  
        p:prefix="/WEB-INF/page/"  
        p:suffix=".jsp"
        p:order="2"
         /> 
    
    <!-- 
	Spring MVC处理异常有3种方式： 
          （1）使用Spring MVC提供的简单异常处理器SimpleMappingExceptionResolver； 
          （2）实现Spring的异常处理接口HandlerExceptionResolver 自定义自己的异常处理器； 
          （3）使用@ExceptionHandler注解实现异常处理； 
	 -->
   
    <!-- 全局异常配置 start -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">errors/500</prop><!-- 这里是出错后对应的视图 -->
				<prop key="java.lang.Throwable">errors/404</prop>
				<prop key="java.lang.RuntimeException">errors/500</prop>
			</props>
		</property>
		<property name="statusCodes">
			<props>
				<prop key="errors/500">500</prop><!--errors/500的状态码 是500  -->
				<prop key="errors/404">404</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="springExceptionResolver" />
		<!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
		<property name="defaultErrorView" value="errors/500" />
		<!-- 默认HTTP状态码 -->
		<property name="defaultStatusCode" value="500" />
	</bean>
	<!-- 全局异常配置 end -->
	
	
	<!-- 把自己写的拦截器注册到spring中。 -->
	<mvc:interceptors>
	    <mvc:interceptor>
	        <mvc:mapping path="/**"/><!-- 对所有的请求都拦截，也可以用正则表达式对特定的请求拦截。 -->
	        <bean class="org.zlex.spring.interceptor.personIntercetor"></bean>
	    </mvc:interceptor>
	    <mvc:interceptor>
	        <mvc:mapping path="/**"/><!-- 对所有的请求都拦截，也可以用正则表达式对特定的请求拦截。 -->
	        <bean class="org.zlex.spring.interceptor.personIntercetorTwo"></bean>
	    </mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 解決web.xml中的 “/” 对jpg,js,css静态文件的访问也被拦截不能正常显示 -->
	<mvc:default-servlet-handler/>
	
	 <bean id="freeMarkerConfigurer"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="classpath:/template/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="number_format">#</prop>
			</props>
		</property>
	</bean>
	
	<!-- FreeMarker视图解析   如返回student。。在这里配置后缀名ftl和视图解析器。。
 <bean id="viewResolver"
  class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
  <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"></property>
  <property name="suffix" value=".ftl" />
  <property name="contentType" value="text/html;charset=utf-8" />
  <property name="exposeRequestAttributes" value="true" />
  <property name="exposeSessionAttributes" value="true" />
  <property name="exposeSpringMacroHelpers" value="true" />
           給視圖解析器配置優先級，你可以給之前jsp視圖解析器的值配為2 
  <property name="order" value="1" />
 </bean>-->
 
 
	
</beans>